.promo {
  border-radius: var(--udexRadiusL);
  background-color: var(--udexColorGrey1);

  &.blue {
    background-color: var(--udexColorBlue1);
  }

  & > div {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    flex-flow: row wrap;
    padding: var(--udexSpacer24);
    gap: var(--udexSpacer24);

    @media (width >= 980px) {
      flex-wrap: nowrap;
    }

    & > div {
      flex-grow: 1;
    }

    & > div:has(picture) {
      flex-grow: 0;
    }
  }

  & p {
    font-size: var(--udexTypographyBodySFontSize);
    line-height: var(--udexTypographyBodyLineHeight);
    margin: 0;

    &.button-container {
      margin-block: var(--udexSpacer24) 0;
    }

    & + p {
      margin-block-start: var(--udexSpacer8);
    }
  }

  & :is(h2, h3) {
    font-size: var(--udexTypographyHeadingMediumXSFontSize);
    font-weight: var(--udexTypographyFontWeightMedium);
    line-height: var(--udexTypographyHeadingLineHeight);
    margin: 0;
    text-align: left;

    @media (width >= 1280px) {
      font-size: var(--udexTypographyHeadingMediumSFontSize);
    }

    & + :is(p, h2, h3, h4) {
      margin-block-start: var(--udexSpacer8);
    }
  }

  & h4,
  & h3:has(+ h2) {
    color: var(--udexColorBlue8);
    font-size: var(--udexTypographyEyebrowLFontSize);
    font-weight: var(--udexTypographyFontWeightMedium);
    line-height: var(--udexTypographyEyebrowLineHeight);
    margin: 0;
    text-transform: uppercase;

    & + :is(p, h2, h3, h4) {
      margin-block-start: var(--udexSpacer8);
    }
  }

  & img {
    max-width: 120px;
    max-height: 120px;
    display: block;
  }

  & .button-container .button {
    --button-font-size: var(--button-medium-font-size);
    --button-inline-padding: var(--button-medium-inline-padding);
    --button-block-padding: var(--button-medium-block-padding);
    --button-icon-size: var(--button-medium-icon-size);
    --button-icon-spacing: var(--button-medium-icon-spacing);
  }
}

@media (width >= 1280px) {
  /* Disabling linting rule as these style rules cannot conflict with one other */
  /* stylelint-disable no-descending-specificity */
  body:not(.article) .promo,
  body.article:has(.toc-container) .promo-container[data-location="document-header"] .promo,
  body.article:has(.toc-container) .promo-container[data-location="document-footer"] .promo,
  body.article:not(:has(.toc-container)) main > .promo-container:not([data-location="sidebar"]) .promo  {
    & > div {
      align-items: center;
      gap: var(--udexSpacer32);
      padding: var(--udexSpacer32);

      & > div:has(.button-container) {
        display: grid;
        grid-template-columns: 1fr min-content;

        /* We need to specify rows as "grid-row: 1 / -1" will not work for implicit grid rows */
        grid-template-rows: repeat(99, min-content);

        & :is(h2, h3, h4, p:not(.button-container)) {
          grid-column: 1 / 2;
        }
        
        & .button-container {
          align-self: center;
          grid-column: 2 / -1;
          grid-row: 1 / -1;
          margin-block: 0;
          margin-inline-start: var(--udexSpacer32);
        }
      }
    }

    & .button-container .button {
      --button-font-size: var(--button-large-font-size);
      --button-icon-spacing: var(--button-large-icon-spacing);
      --button-icon-size: var(--button-large-icon-size);
      --button-inline-padding: var(--button-large-inline-padding);
      --button-block-padding: var(--button-large-block-padding);
    }
  }
  /* stylelint-enable no-descending-specificity */
}

.promo-wrapper {
  margin-block: var(--udexSpacer32);

  &:first-child {
    margin-block-start: 0;
  }

  &:last-child {
    margin-block-end: 0;
  }

  @media (width >= 980px) {
    margin-block: var(--udexSpacer40);
  }
}

[data-location='sidebar'] .promo-wrapper {
  margin-block: var(--udexSpacer40);

  &:first-child {
    margin-block-start: 0;
  }

  &:last-child {
    margin-block-end: 0;
  }

  @media (width >= 980px) {
    margin-block-end: var(--udexSpacer56);
  }

  @media (width >= 1280px) {
    margin-block-end: var(--udexSpacer64);
  }

  & .promo > div {
    flex-wrap: wrap;
    padding: var(--udexSpacer32);
  }

  @media (width >= 1280px) {
    .promo :is(h2, h3) {
      font-size: var(--udexTypographyHeadingMediumXSFontSize);
    }
  }
}
